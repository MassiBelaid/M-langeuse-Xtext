/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Model

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
		val model = resource.contents.head as Model;
		
		fsa.generateFile("Main.java",'''
			import fr.uha.ensisa.idm.mixin.sim.svg.SVGMixingMachine;
			public class Main extends SVGMixingMachine {
				public int run (){	
				«FOR t : model.features»
					«IF t.fun == "scan"»
						if(scan() «t.comp»  «t.value») return «t.valuereturn»;
					«ELSE»
						«t.fun»(«t.value»);
					«ENDIF»
				«ENDFOR»
				return 0;
				}
				
				public static void main(String[] args){
					Main main = new Main();
					for (int i = 1; i <= main.getInputCups(); ++i){
						main.setAtInputCup(i,9);
					}
					
						main.run();
				
				}
			}
		'''); 
	}
}
